var N = null;var searchIndex = {};
searchIndex["flumedb"]={"doc":"flumedb","items":[[0,"flume_log","flumedb","",N,N],[3,"Error","flumedb::flume_log","The `Error` type, which can contain any failure.",N,N],[3,"StreamOpts","","",N,N],[12,"lt","","",0,N],[12,"gt","","",0,N],[12,"reverse","","",0,N],[12,"live","","",0,N],[12,"limit","","",0,N],[4,"FlumeLogError","","",N,N],[13,"SequenceNotFound","","",1,N],[12,"sequence","flumedb::flume_log::FlumeLogError","",1,N],[6,"Sequence","flumedb::flume_log","",N,N],[8,"FlumeLog","","",N,N],[10,"get","","",2,[[["self"],["sequence"]],["result",["vec","error"]]]],[10,"clear","","",2,[[["self"],["sequence"]]]],[10,"latest","","",2,[[["self"]],["sequence"]]],[10,"append","","",2,N],[0,"flume_view","flumedb","",N,N],[8,"FlumeView","flumedb::flume_view","",N,N],[10,"append","","",3,N],[10,"latest","","",3,[[["self"]],["sequence"]]],[0,"flume_view_sql","flumedb","",N,N],[3,"FlumeViewSql","flumedb::flume_view_sql","",N,N],[4,"FlumeViewSqlError","","",N,N],[13,"DbFailedIntegrityCheck","","",4,N],[11,"new","","",5,[[["str"],["sequence"]],["flumeviewsql"]]],[11,"get_seq_by_key","","",5,[[["self"],["string"]],["result",["i64","error"]]]],[11,"get_seqs_by_type","","",5,[[["self"],["string"]],["result",["vec","error"]]]],[11,"append_batch","","",5,[[["self"],["vec"]]]],[0,"mem_log","flumedb","",N,N],[3,"MemLog","flumedb::mem_log","",N,N],[11,"new","","",6,[[],["memlog"]]],[0,"offset_log","flumedb","",N,N],[3,"OffsetCodec","flumedb::offset_log","",N,N],[3,"OffsetLog","","",N,N],[3,"OffsetLogIter","","",N,N],[3,"Data","","",N,N],[12,"data_buffer","","",7,N],[12,"id","","",7,N],[4,"FlumeOffsetLogError","","",N,N],[13,"CorruptLogFile","","",8,N],[13,"DecodeBufferSizeTooSmall","","",8,N],[11,"new","","",9,[[],["offsetcodec"]]],[11,"with_length","","",9,[[["u64"]],["offsetcodec"]]],[11,"new","","",10,[[["r"]],["offsetlogiter"]]],[11,"new","","",11,[[["string"]],["offsetlog"]]],[11,"append_batch","","",11,N],[11,"from","flumedb::flume_log","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"as_fail","","",12,[[["self"]],["fail"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"as_fail","","",1,[[["self"]],["fail"]]],[11,"from","flumedb::flume_view_sql","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"as_fail","","",4,[[["self"]],["fail"]]],[11,"from","flumedb::mem_log","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","flumedb::offset_log","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"as_fail","","",8,[[["self"]],["fail"]]],[11,"as_ref","flumedb::flume_log","",12,[[["self"]],["fail"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result",["error"]]]],[11,"as_fail","","",12,[[["self"]],["fail"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result",["error"]]]],[11,"from","","",12,[[["f"]],["error"]]],[11,"get","flumedb::mem_log","",6,[[["self"],["u64"]],["result",["vec","error"]]]],[11,"clear","","",6,[[["self"],["u64"]]]],[11,"latest","","",6,[[["self"]],["u64"]]],[11,"append","","",6,N],[11,"get","flumedb::offset_log","",11,[[["self"],["u64"]],["result",["vec","error"]]]],[11,"latest","","",11,[[["self"]],["u64"]]],[11,"append","","",11,N],[11,"clear","","",11,[[["self"],["u64"]]]],[11,"append","flumedb::flume_view_sql","",5,N],[11,"latest","","",5,[[["self"]],["sequence"]]],[11,"clone","flumedb::offset_log","",9,[[["self"]],["offsetcodec"]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"partial_cmp","","",9,[[["self"],["offsetcodec"]],["option",["ordering"]]]],[11,"lt","","",9,[[["self"],["offsetcodec"]],["bool"]]],[11,"le","","",9,[[["self"],["offsetcodec"]],["bool"]]],[11,"gt","","",9,[[["self"],["offsetcodec"]],["bool"]]],[11,"ge","","",9,[[["self"],["offsetcodec"]],["bool"]]],[11,"eq","","",9,[[["self"],["offsetcodec"]],["bool"]]],[11,"ne","","",9,[[["self"],["offsetcodec"]],["bool"]]],[11,"cmp","","",9,[[["self"],["offsetcodec"]],["ordering"]]],[11,"hash","","",9,N],[11,"fmt","flumedb::flume_log","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","flumedb::flume_view_sql","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","flumedb::offset_log","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","flumedb::flume_log","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","flumedb::flume_view_sql","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","flumedb::offset_log","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"cause","flumedb::flume_log","",1,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",1,[[["self"]],["option",["backtrace"]]]],[11,"cause","flumedb::flume_view_sql","",4,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",4,[[["self"]],["option",["backtrace"]]]],[11,"cause","flumedb::offset_log","",8,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",8,[[["self"]],["option",["backtrace"]]]],[11,"decode","","",9,[[["self"],["bytesmut"]],["result",["option"]]]],[11,"decode_eof","","",9,[[["self"],["bytesmut"]],["result",["option"]]]],[11,"encode","","",9,N],[11,"from_boxed_compat","flumedb::flume_log","Creates an `Error` from `Box<std::error::Error>`.",12,[[["box",["error"]]],["error"]]],[11,"as_fail","","Return a reference to the underlying failure that this `Error` contains.",12,[[["self"]],["fail"]]],[11,"cause","","Returns a reference to the underlying cause of this `Error`. Unlike the method on `Fail`, this does not return an `Option`. The `Error` type always has an underlying failure.",12,[[["self"]],["fail"]]],[11,"backtrace","","Gets a reference to the `Backtrace` for this `Error`.",12,[[["self"]],["backtrace"]]],[11,"context","","Provides context for this `Error`.",12,[[["self"],["d"]],["context"]]],[11,"compat","","Wraps `Error` in a compatibility type.",12,[[["self"]],["compat",["error"]]]],[11,"downcast","","Attempts to downcast this `Error` to a particular `Fail` type.",12,[[["self"]],["result",["error"]]]],[11,"find_root_cause","","Returns the \"root cause\" of this error - the last value in the cause chain which does not return an underlying `cause`.",12,[[["self"]],["fail"]]],[11,"iter_causes","","Returns a iterator over the causes of this error with the cause of the fail as the first item and the `root_cause` as the final item.",12,[[["self"]],["causes"]]],[11,"iter_chain","","Returns a iterator over all fails up the chain from the current as the first item up to the `root_cause` as the final item.",12,[[["self"]],["causes"]]],[11,"downcast_ref","","Attempts to downcast this `Error` to a particular `Fail` type by reference.",12,[[["self"]],["option"]]],[11,"downcast_mut","","Attempts to downcast this `Error` to a particular `Fail` type by mutable reference.",12,[[["self"]],["option"]]],[11,"root_cause","","Deprecated alias to `find_root_cause`.",12,[[["self"]],["fail"]]],[11,"causes","","Deprecated alias to `iter_causes`.",12,[[["self"]],["causes"]]]],"paths":[[3,"StreamOpts"],[4,"FlumeLogError"],[8,"FlumeLog"],[8,"FlumeView"],[4,"FlumeViewSqlError"],[3,"FlumeViewSql"],[3,"MemLog"],[3,"Data"],[4,"FlumeOffsetLogError"],[3,"OffsetCodec"],[3,"OffsetLogIter"],[3,"OffsetLog"],[3,"Error"]]};
initSearch(searchIndex);
